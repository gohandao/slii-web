import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import React, { useState, useContext, useEffect } from "react";

import { CreatorList } from "@/components/CreatorList";
import { CollectionTable } from "@/components/CollectionTable";
import { SearchArea } from "@/components/SearchArea";

import { Mainvisual } from "@/components/Mainvisual";
import { ShowMore } from "@/components/ShowMore";
import { Pagination } from "@/components/Pagination";
import { BaseLayout } from "@/components/BaseLayout";
import { IndexTab } from "@/components/IndexTab";
import { Hr } from "@/components/Hr";
import { Title } from "@/components/Title";
import { LinkButton } from "@/components/LinkButton";

import { Dropdown } from "@/components/Dropdown";

import { CreatorsContext } from "@/contexts/CreatorsContext";
import { CollectionsContext } from "@/contexts/CollectionsContext";
import { BaseContext } from "@/contexts/BaseContext";
import { UtilitiesContext } from "@/contexts/UtilitiesContext";

import { Creator } from "@/types/creator";
import { Collection } from "@/types/collection";
import { Headline } from "@/components/Headline";
import { BreadCrumbs } from "@/components/BreadCrumbs";
import { TermSort } from "@/components/TermSort";
const StatsPage: NextPage = () => {
  const router = useRouter();
  const { page, term } = router.query;

  const { setBreadcrumbList, setHeaderIcon } = useContext(UtilitiesContext);
  const breadcrumbList = [
    {
      name: "Home",
      path: "/",
    },
    {
      name: "Collection stats",
      path: "/stats",
    },
  ];
  useEffect(() => {
    setHeaderIcon({
      title: "Collection stats",
      emoji: "ðŸ’Ž",
      avatar: "",
      path: "/stats",
    });
    setBreadcrumbList(breadcrumbList);
  }, []);
  const { creators, collections, OSCollections } = useContext(BaseContext);
  const collectionsLength = collections.length;

  //const [collectionsMenu, setCollectionMenu] =
  //useState<string[]>(collectionsMenus);

  const collectionSortHandler = () => {
    //setCollectionsSort("volume");
    console.log("test");
  };
  return (
    <div>
      <Head>
        <title>
          NFT OTAKU | Search Japanese NFT creators, projects, collections.
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <section className="mx-auto px-5 md:px-8 mt-3">
          {/*<div className="mb-5">
            <Headline
              pageTitle="Collections"
              emoji="ðŸ—‚"
              title="Japanese awesome NFT collections List."
              length={collectionsLength}
              label="Collections"
            />
  </div>*/}
          {/*<button onClick={collectionSortHandler}>test sort</button>*/}
          <h1 className="text-gray-500 text-sm tracking-[0.2em] mb-3">
            Japanese awesome NFT collections List.
          </h1>
          {OSCollections && (
            <p className="text-gray-500 mb-2 text-sm">
              {OSCollections.length} collections
            </p>
          )}
          <div className="flex gap-5 justify-between items-center mb-4">
            <Dropdown position="left" property="collectionType" />
            <div className="flex gap-4">
              <TermSort term={term as string} />
            </div>
            {/*<Dropdown position="right" type="sortCollections" />*/}
          </div>
          <div className="">
            {OSCollections && <CollectionTable collections={OSCollections} />}
          </div>
          {/*<div className="flex justify-center mb-20">
            <ShowMore currentPage={page ? Number(page) : 1} />
  </div>*/}
        </section>
      </BaseLayout>
    </div>
  );
};

export default StatsPage;

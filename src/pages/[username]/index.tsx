import type { NextPage } from "next";
import React, { useState, useEffect, useContext } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";

import { base } from "@/libs/airtable";

import { useRouter } from "next/router";

import { CreatorsContext } from "@/contexts/CreatorsContext";
import { CollectionsContext } from "@/contexts/CollectionsContext";

import { CollectionCard } from "@/components/CollectionCard";
import { List } from "@/components/List";
import { ShowMore } from "@/components/ShowMore";
import { Pagination } from "@/components/Pagination";
import { BaseLayout } from "@/components/BaseLayout";
import { IndexTab } from "@/components/IndexTab";
import { CreatorProfile } from "@/components/CreatorProfile";
import { Title } from "@/components/Title";
import { Custom404 } from "@/pages/404";

import { Creator } from "@/types/creator";
import { Collection } from "@/types/collection";

const CreatorIndex: NextPage = () => {
  const router = useRouter();
  const creators = useContext(CreatorsContext);
  const collections = useContext(CollectionsContext);

  const [creator, setCreator] = useState<Creator>();
  const [collectionSlug, setCollectionSlug] = useState<string>();
  const { username } = router.query;
  const [loading, setLoading] = useState<boolean>(false);

  const [collection, setCollection] = useState([]);
  const options = { method: "GET" };

  const getCollection = () => {
    fetch(`https://api.opensea.io/api/v1/collection/${collectionSlug}`, options)
      .then((response) => response.json())
      .then((response) => {
        console.log("response.collection");
        console.log(response.collection);
        setCollection(response.collection);
      })
      .catch((err) => console.error(err));
  };

  const updateCollectionSlug = (slug: string) => {
    setCollectionSlug(slug);
  };

  useEffect(() => {
    if (username) {
      //set creator
      const creator_filter = creators.filter(
        (creator) => creator.username === username
      );
      setCreator(creator_filter[0]);
      //set collection
      const collection_filter = collections.filter(
        (collection) => collection.creator_id === username
      );
      collection_filter.length > 0 &&
        updateCollectionSlug(collection_filter[0].slug);
    }
  }, [username, collections]);
  useEffect(() => {
    collectionSlug && getCollection();
  }, [collectionSlug]);

  return (
    <div>
      <Head>
        <title>Anisonar | Search your favorite anime op and ed animation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <div className="flex flex-col gap-10 pb-20">
          {creator && <CreatorProfile creator={creator} />}
          {collection && (
            <div className="mx-auto max-w-7xl w-full">
              <Title property="h2" addClass="mb-5">
                Featured Collections
              </Title>
              <CollectionCard collection={collection} />
            </div>
          )}
        </div>
      </BaseLayout>
    </div>
  );
};

export default CreatorIndex;

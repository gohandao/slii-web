import { useState, useEffect, SetStateAction, useContext } from "react";
import { supabase } from "@/libs/supabase";
import { BaseLayout } from "@/components/BaseLayout";
import Head from "next/head";
import Link from "next/link";
import imageCompression from "browser-image-compression";

import { Input } from "@/components/Input";
import { UploadImage } from "@/components/UploadImage";
import { AuthContext } from "@/contexts/AuthContext";

type UpdateProps = {
  username: string;
  //website: string
  avatar_url: string;
};
import { v4 as uuidv4 } from "uuid";
import { UtilitiesContext } from "@/contexts/UtilitiesContext";

export default function Account() {
  const { setHeaderIcon } = useContext(UtilitiesContext);

  useEffect(() => {
    setHeaderIcon({
      title: "Account",
      emoji: "🧑‍💻",
      avatar: "",
      path: `/account`,
    });
  }, []);

  const { user, profile, avatar, setAvatar } = useContext(AuthContext);
  const [loading, setLoading] = useState(false);
  // const [avatar, setAvatar] = useState<File>();
  const [email, setEmail] = useState<string>("");
  const [username, setUsername] = useState<string>("");
  //const [website, setWebsite] = useState<string>('')
  const [avatarUrl, setAvatarUrl] = useState<string>("");

  const options = {
    maxSizeMB: 1, // 最大ファイルサイズ
    maxWidthOrHeight: 80, // 最大画像幅もしくは高さ
  };
  // const file = await imageCompression(images[0].files[0], options);

  useEffect(() => {
    if (user) {
      setEmail(user.email);
    }
    if (profile) {
      setUsername(profile.username);
      setAvatarUrl(profile.avatar_url);
    }

    //console.log('session')
    //console.log(user)
  }, [user, profile]);

  const uploadImage = async (image: File) => {
    const uuid = uuidv4();

    const { data, error } = await supabase.storage
      .from("avatars")
      .upload(`public/${uuid}.jpg`, image, {
        cacheControl: "3600",
        upsert: false,
      });
    // console.log("uploadImage");
    // console.log(avatar);
    // console.log(data);
    return data;
  };
  const updateProfile = async () => {
    try {
      setLoading(true);
      const user = supabase.auth.user();
      let new_avatar_url;
      if (user) {
        if (avatar) {
          new_avatar_url = await uploadImage(avatar);
          new_avatar_url = new_avatar_url?.Key;
        }
        const updates = {
          id: user.id,
          username: username,
          avatar_url: new_avatar_url,
          updated_at: new Date(),
        };

        let { error } = await supabase.from("profiles").upsert(updates, {
          returning: "minimal", // Don't return the value after inserting
        });
        alert("upload success");

        if (error) {
          throw error;
        }
      }
    } catch (error: any) {
      alert(error.message);
    } finally {
      setLoading(false);
      //location.reload();
    }
  };

  return (
    <div>
      <Head>
        <title>Anisonar | Search your favorite anime op and ed animation</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <div className="mt-8 px-5">
          <div className="bg-gray-800 max-w-lg mx-auto pt-8 pb-8 px-8 rounded ">
            <div className="mb-5">
              <UploadImage image={avatar} setImage={setAvatar} />
            </div>
            <p className="text-white">{profile.website}</p>
            <div>
              <Input
                label="Email"
                id="email"
                type="email"
                value={email || ""}
                onChange={setEmail}
              />
            </div>
            <div>
              <Input
                label="Username"
                id="username"
                type="text"
                value={username || ""}
                onChange={setUsername}
              />
            </div>
            <div className="mb-5">
              <p className="text-gray-100">Liked songs</p>
              <Link href={`https://anisonar.vercel.app/${username}`}>
                <a className="text-blue-500 underline hover:no-underline">
                  https://anisonar.vercel.app/{username}
                </a>
              </Link>
            </div>
            <div className="flex flex-col gap-3 justify-center items-center">
              <div>
                <button
                  className="py-2 px-5 rounded bg-blue-800 text-blue-100"
                  onClick={() => updateProfile()}
                  disabled={loading}
                >
                  {loading ? "Loading ..." : "Update"}
                </button>
              </div>
            </div>
          </div>
        </div>
      </BaseLayout>
    </div>
  );
}
